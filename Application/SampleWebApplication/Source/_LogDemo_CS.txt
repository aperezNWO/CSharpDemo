
namespace Exam70483Web.Controllers
{
        //
        public class XlsManager
        {
            #region "Campos"
            string                _resultFilePath;
            List<AccessLogEntity> _listadoAccessLog;
            #endregion

            #region "Constructor"
            //
            public XlsManager(
                                string                 p_resultFilePath
                                ,List<AccessLogEntity> p_listadoAccessLog
                             )
            {
                //
                this._listadoAccessLog = p_listadoAccessLog;
                this._resultFilePath   = p_resultFilePath;
            }
            #endregion

            #region "Métodos"
            //
            public bool GetXLS()
            {
                //
                bool result = true;
                //
                try
                {
                    //
                    CrearExcel();

                    //
                    result = true;
                }
                catch (Exception ex)
                {
                    //
                    string errorMsg = string.Format("PAGE_LOG_DEMO_ERROR : {0}",(ex.Message + "-" + ex.StackTrace));
                    //
                    LogModel.Log(errorMsg, string.Empty,LogModel.LogType.Error);
                    //
                    result = false;
                }

                return result;
            }
            //
            public static String GetCellPositionFromIndex(int column)
            {
                column--;
                String col = Convert.ToString((char)('A' + (column % 26)));
                while (column >= 26)
                {
                    column = (column / 26) - 1;
                    col = Convert.ToString((char)('A' + (column % 26))) + col;
                }
                return col;
            }
            //
            public void CrearExcel()
            {
                //
                string nombreHoja  = "LOG";


                //
                ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
                ExcelPackage excel          = new ExcelPackage();

                //
                using (excel       = new ExcelPackage(new FileInfo(_resultFilePath)))
                {
                    //
                    excel.Workbook.Worksheets.Add(nombreHoja);
                    excel.Save();

                    //
                    var hojaActual = excel.Workbook.Worksheets[nombreHoja];


                    //-----------------------------------------------------------
                    // ENCABEZADO
                    //-----------------------------------------------------------

                    //
                    List<string> headerNames = new List<string>();
                    //
                    headerNames.Add("PAGE_NAME");
                    headerNames.Add("ACCESS_DATE");
                    headerNames.Add("IP_VALUE");

                    //
                    for (int index = 0; index < headerNames.Count; index++)
                    {
                        //
                        string cellPosition = string.Format(@"{0}1",GetCellPositionFromIndex((index+1)));
                        string cellValue    = headerNames[index];

                        //
                        hojaActual.Cells[cellPosition].Value                  = cellValue;
                        hojaActual.Cells[cellPosition].Style.Font.Color.SetColor(System.Drawing.Color.White);
                        hojaActual.Cells[cellPosition].Style.Font.Bold        = true;
                        hojaActual.Cells[cellPosition].Style.Fill.PatternType = ExcelFillStyle.Solid;
                        hojaActual.Cells[cellPosition].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.SaddleBrown);
                        hojaActual.Cells[cellPosition].Style.Border.BorderAround(OfficeOpenXml.Style.ExcelBorderStyle.Thick);
                    }

                    //------------------------------------------------------------------
                    // CONTENIDO
                    //------------------------------------------------------------------                
                    for (int index = 0; index < this._listadoAccessLog.Count; index++)
                    {
                        //
                        AccessLogEntity accessLogEntity = this._listadoAccessLog[index];
                        string cellPosition             = string.Empty;
                        string cellValue                = string.Empty;

                        // PAGE_NAME
                        cellPosition                         = string.Format(@"A{0}", (index + 2));
                        cellValue                            = accessLogEntity.PageName;  
                        hojaActual.Cells[cellPosition].Value = cellValue;
                        hojaActual.Cells[cellPosition].Style.Border.BorderAround(OfficeOpenXml.Style.ExcelBorderStyle.Thin);

                        // ACCESS_DATE
                        cellPosition                         = string.Format(@"B{0}", (index + 2));
                        cellValue                            = accessLogEntity.AccessDate.ToString(); 
                        hojaActual.Cells[cellPosition].Value = cellValue;
                        hojaActual.Cells[cellPosition].Style.Border.BorderAround(OfficeOpenXml.Style.ExcelBorderStyle.Thin);

                        // IP_VALUE
                        cellPosition                         = string.Format(@"C{0}", (index + 2));
                        cellValue                            = accessLogEntity.IPValue;
                        hojaActual.Cells[cellPosition].Value = cellValue;
                        hojaActual.Cells[cellPosition].Style.Border.BorderAround(OfficeOpenXml.Style.ExcelBorderStyle.Thin);

                    }

                    //--------------------------------------------------------------------
                    // FORMATEAR DOCUMENTO
                    //--------------------------------------------------------------------
                    hojaActual.Cells.AutoFitColumns();
                    hojaActual.View.ShowGridLines = false;
                    hojaActual.View.FreezePanes(2, 1);
                    excel.Save();
                }
            }

            #endregion
        }
    }
    //
    public class LogModel
    {
        #region "Enums"
        public enum LogType
        {
            Info = 1
            , Debug = 2
            , Error = 3
        }

        #endregion

        #region "Campos"
        private static string constring = System.Configuration.ConfigurationManager.ConnectionStrings["defaultConnection"].ConnectionString;
        #endregion

        #region "Metodos"

        #region "SELECT"
        //
        public static string Build_6_Tsql_SelectLog(LogType logType)
        {
            return string.Format(@" SELECT 
                           [ID_column]
                          ,[PageName]
                          ,[AccessDate]
                          ,[IpValue]
                     FROM 
                           [dbo].[accessLogs] 
                     WHERE
                           [LogType] = {0}
                     order by 
                           [ID_column] desc", (uint)logType);
        }
        //
        public static List<AccessLogEntity> GetAccessLog
            (
                string constring
            )
        {
            //
            List<AccessLogEntity> listLog = new List<AccessLogEntity>();
            //
            using (var connection = new SqlConnection(constring))
            {
                //
                connection.Open();
                //
                string tsql = Build_6_Tsql_SelectLog(LogType.Info);
                //
                using (var command = new SqlCommand(tsql, connection))
                {
                    //
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        //
                        while (reader.Read())
                        {
                            //
                            int id_Column               = Convert.ToInt32(reader["ID_Column"]);
                            string pageName             = (string)reader["PageName"];
                            System.DateTime accessDate  = (DateTime)reader["AccessDate"];
                            string ipValue              = (string)reader["IPValue"];
                            //
                            AccessLogEntity Obj         = new AccessLogEntity();
                            //
                            Obj.Id_Column   = id_Column;
                            Obj.PageName    = pageName;
                            Obj.AccessDate  = accessDate;
                            Obj.IPValue     = ipValue;
                            //
                            listLog.Add(Obj);
                        }
                    }
                }
            }
            //
            return listLog;
        }
        //
        public static DataTable ListadoLogDataTable()
        {
            //
            string tsql              = Build_6_Tsql_SelectLog(LogType.Info);
            //
            DataTable maestroListado = new DataTable();
            //
            try
            {
                //
                using (var connection = new SqlConnection(constring))
                {
                    using (var command = new SqlCommand(tsql, connection))
                    {
                        SqlDataAdapter adapter = new SqlDataAdapter(command);
                        adapter.Fill(maestroListado);
                    }
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            //
            return maestroListado;
        }

        #endregion

        #region "INSERT"
        private static string InsertAccessLog
            (
                 string  pageName
                ,string  ipValue
                ,LogType logType
            )
        {
            //
            pageName = pageName.Replace("'", "''");
            //
            if (pageName.Length >= 128) 
                pageName = pageName.Substring(0, 128);
            //
            return string.Format(@"
                           INSERT INTO accessLogs
                           (PageName,IpValue,LogType)
                              VALUES
                           ('{0}','{1}',{2});",pageName,ipValue,(uint)logType);
        }
        //
        private static void Submit_Tsql_NonQuery
            (
                SqlConnection connection,
                string tsqlSourceCode,
                string parameterName = null,
                string parameterValue = null
            )
        {
            //    
            using (var command = new SqlCommand(tsqlSourceCode, connection))
            {
                if (parameterName != null)
                {
                    command.Parameters.AddWithValue(  // Or, use SqlParameter class.
                        parameterName,
                        parameterValue);
                }
                int rowsAffected = command.ExecuteNonQuery();
                Console.WriteLine(rowsAffected + " = rows affected.");
            }
        }
        //
        public static void Log
                (
                      string msg
                    , string ipValue  = ""
                    , LogType logType = LogType.Info
                )
        {
            //
            using (var connection = new SqlConnection(constring))
            {
                //
                connection.Open();
                //
                LogModel.Submit_Tsql_NonQuery(connection,
                   LogModel.InsertAccessLog(
                        msg
                       ,ipValue
                       ,logType
                       ));
            }
            //
        }
        #endregion

        #endregion
    }

    //
    public class GenericController : Controller
    {
        //
        public string GetIpValue()
        {
            //
            string ipAdd = Request.ServerVariables["HTTP_X_FORWARDED_FOR"];
            //
            if (string.IsNullOrEmpty(ipAdd))
            {
                ipAdd = Request.ServerVariables["REMOTE_ADDR"];
            }
            //
            return ipAdd;
        }
    }
    //
    public class DemosController : GenericController
    {
        #region "Campos"
        //
        string connString               = System.Configuration.ConfigurationManager.ConnectionStrings["defaultConnection"].ConnectionString;
        string _documentsLocalDirectory = System.Configuration.ConfigurationManager.AppSettings["DocumentsLocalDirectory"];
        //
        int ARRAY_SIZE = 25;
        #endregion

        // ....

        #region "Log DEMO"
        public ActionResult _LogDemo()
        {
            //
            List<AccessLogEntity> ListadoAccessLog = new List<AccessLogEntity>();
            //
            try
            {
                //
                LogModel.Log("PAGE_ACCESS_LOG_DEMO", this.GetIpValue());
                //
                ListadoAccessLog  = LogModel.GetAccessLog
                    (
                         connString
                    );
                //
            }
            catch (SqlException e)
            {
                Console.WriteLine(e.ToString());
            }
            //
            return View(ListadoAccessLog);
        }

        //
        public string GenerarInformeXLS()
        {
            //
            string status = "OK";

            try
            {
                //
                string _extensionDocumento  = @"xlsx";
                string _directorioDocumento = string.Format("{0}/{1}", _documentsLocalDirectory, _extensionDocumento);
                string _nombreDocumento     = string.Format("{0}{1}.{2}"
                 , System.Guid.NewGuid().ToString()
                 , DateTime.Now.ToString(Globals.DateFormatShortTimestamp)
                 , _extensionDocumento);

                //
                string resultRelativeFilePath = string.Format(@"~/{0}/{1}", _directorioDocumento, _nombreDocumento);
                string resultFilePath         = Server.MapPath(resultRelativeFilePath);

                //
                List<AccessLogEntity> ListadoAccessLog = new List<AccessLogEntity>();
                //
                ListadoAccessLog                       = LogModel.GetAccessLog(connString);
                //
                XlsManager xlsManager = new XlsManager(resultFilePath, ListadoAccessLog);
                status                = (xlsManager.GetXLS()) == true ? _nombreDocumento : @"[ERROR]";
                //
            }
            catch (Exception ex)
            {
                //
                status = String.Format("PAGE_LOG_DEMO | ERROR | {0}-{1}", ex.Message, ex.StackTrace);
                //
                LogModel.Log(status, GetIpValue(), LogModel.LogType.Error);
                //
                throw ex;
            }
            return status;
        }

        #endregion

    }
}